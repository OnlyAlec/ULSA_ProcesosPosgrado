name: Deploy Prod
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Subir archivos vía API
        env:
          FB_TOKEN: ${{ secrets.FILEBROWSER_TOKEN }}
          FB_URL: ${{ secrets.FILEBROWSER_URL }}
        run: |
          # Instalar dependencias para subida
          sudo apt-get install -y curl jq

          # Crear ZIP del proyecto
          zip -r deploy.zip . -x *.git*

          # Crear archivo en FileBrowser
          curl -X POST \
            -H 'X-Auth: $FILEBROWSER_TOKEN' \
            "$FILEBROWSER_URL/api/tus/deploy.zip?override=false"

          # Verificar si lo creo en FileBrowser
          response=$(curl -X HEAD \
            -H 'X-Auth: $FILEBROWSER_TOKEN' \
            "$FILEBROWSER_URL/api/tus/deploy.zip?override=false")

          # Si no es 200, ups!
          status_code=$(echo "$response" | grep -oP "HTTP/[0-9.]+ \K[0-9]+")
          if [ "$status_code" != "200" ]; then
            echo "Error: Received status code $status_code"
            exit 1
          fi

          # Mandar archivo a FileBrowser
          curl -X PATCH \
            -H 'X-Auth: $FILEBROWSER_TOKEN' \
            -H "Content-Type: application/offset+octet-stream" \
            -H "tus-resumable: 1.0.0" \
            -H "upload-offset: 0" \
            -d "@deploy.zip" \
            "$FILEBROWSER_URL/api/tus/deploy.zip?override=false"

          # Descomprimir en servidor
          curl -X POST \
           -H "X-Auth: $FILEBROWSER_TOKEN" \
           -d '{"command": "unzip -o deploy.zip"}' \
           "$FB_URL/api/command"
